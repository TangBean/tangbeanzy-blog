<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unity on TangBean 技术分享</title>
    <link>https://tangbeanzy.com/docs/game-dev/Unity/</link>
    <description>Recent content in Unity on TangBean 技术分享</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 03 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://tangbeanzy.com/docs/game-dev/Unity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unity Project 文件类型介绍</title>
      <link>https://tangbeanzy.com/docs/game-dev/Unity/20230902_use-git-in-unity-project/</link>
      <pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://tangbeanzy.com/docs/game-dev/Unity/20230902_use-git-in-unity-project/</guid>
      <description>Unity Project 文件类型介绍#为什么要介绍这个，因为在把本地的 Unity 通过 Git 提交到 Remote 时，开始纠结哪些内容需要被提交到 Remote，然后发现我似乎不太知道 Unity 工程里的改动，都对应着哪些文件的变化，在 git add 的时候不太知道需要将哪些文件 add 进去。所以就有了这篇文章，介绍 Unity Project 中这些文件夹和文件都是用来放什么的、干什么的。
开篇上重点，先给出最初问题的答案，所以最后需要被 push 到 remote 的文件有哪些？
其中 Packages folder 只需要包含 manifest.json,packages-lock.json 这两个文件即可。 基本上必选文件就这些，其他有一些 optional 的可以根据需要加。
打开一个 Unity 工程，ll -al一下，基本就能看见这些文件夹和文件，接下来我们会一一介绍它们。先介绍文件夹部分，再介绍文件部分。
文件夹部分#Assets/#用途： 项目中所有游戏资源（脚本、模型、纹理、声音等）的存放地点。这是我们改动最频繁的文件夹，也是游戏的核心内容所在。 生命周期： 一直存在。你的工作就是疯狂往这个文件夹里填游戏内容，它没了你游戏也没了。 谁负责管理： 你自个儿。 版本控制： must be push to remote ！！！ 这个文件夹是核中核，core 中 core。 你打开这个文件夹，会发现这里面所有的文件夹、文件，都会有一个同名的 .meta 文件。就下面这样：
folder1/folder1.metafile1.txtfile1.meta 这个文件是 Unity 给你创建的，是用来存储和这个文件相关的元数据的。一般会与它们所描述的文件或文件夹放在一起，并且它们的名字也会和相应的文件或文件夹名字一样，只是后缀为 .</description>
    </item>
    
  </channel>
</rss>
